---
swagger: "2.0"
info:
  description: This is a learning  platform
  version: 1.0.0
  title: Self-learning platform
tags:
  - name: card
    description: Creating and deleting cards
  - name: deck
    description: Creating and deleting cards
schemes:
  - https
  - http
paths:
  /card:
    post:
      tags:
        - card
      summary: Add a new card
      description: ""
      operationId: addCard
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Card to be added
          required: true
          schema:
            $ref: '#/definitions/Card'
      responses:
        "200":
          description: Successfully created
        "500":
          description: Armageddon happened
    delete:
      tags:
        - card
      summary: Delete card by id
      operationId: deleteCardById
      parameters:
        - name: id
          in: query
          description: Id of Card to be deleted
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Successfully deleted
        "400":
          description: Invalid ID supplied
        "404":
          description: Card not found
        "500":
          description: Armageddon happened
    patch:
      tags:
        - card
      summary: Update an existing card
      description: ""
      operationId: updateCard
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Card to be updated
          required: true
          schema:
            $ref: '#/definitions/Card'
      responses:
        "200":
          description: Successfully created
        "400":
          description: Invalid ID supplied
        "404":
          description: Card not found
        "500":
          description: Armageddon happened
    get:
      tags:
        - card
      summary: Finds card by id
      description: ""
      operationId: findCardById
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          description: id to filter by
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/Card'
        "400":
          description: Invalid id
  /deck:
    get:
      tags:
        - deck
      summary: Find deck by id
      description: ""
      operationId: findDeckById
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          description: id to filter by
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/DeckResponse'
        "400":
          description: Invalid id
    post:
      tags:
        - deck
      summary: Creates a new deck
      description: ""
      operationId: createDeck
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: deck to add
          required: true
          schema:
            $ref: '#/definitions/DeckRequest'
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/DeckResponse'
        "500":
          description: Armageddon happened
    delete:
      tags:
        - deck
      summary: Delete deck by id
      operationId: deleteDeckById
      parameters:
        - name: id
          in: query
          description: Id of deck to be deleted
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Successfully deleted
        "400":
          description: Invalid ID supplied
        "404":
          description: Deck not found
        "500":
          description: Armageddon happened
    patch:
      tags:
        - deck
      summary: Update deck by id
      operationId: updateDeckById
      parameters:
        - in: body
          name: body
          description: Updated deck info
          required: true
          schema:
            $ref: '#/definitions/DeckRequest'
      responses:
        "200":
          description: Successfully deleted
          schema:
            $ref: '#/definitions/DeckResponse'
        "400":
          description: Invalid ID supplied
        "404":
          description: Deck not found
        "500":
          description: Armageddon happened
  /cards:
    get:
      tags:
        - card
      summary: Finds cards by id deck
      description: ""
      operationId: findCardsByDeckId
      produces:
        - application/json
      parameters:
        - name: id
          in: query
          description: id to filter by
          required: true
          type: integer
          format: int64
        - name: count
          in: query
          description: number of cards to fetch from the deck
          required: false
          type: number
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Card'
        "400":
          description: Invalid id
  /folder:
    get:
      tags:
        - folder
      summary: Gets all folders
      description: ""
      operationId: getAllFolders
      produces:
        - application/json
      parameters: [ ]
      responses:
        "200":
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/FolderResponse'
    post:
      tags:
        - folder
      summary: Creates a new folder
      description: ""
      operationId: createFolder
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: folder to add
          required: true
          schema:
            $ref: '#/definitions/FolderRequest'
      responses:
        "200":
          description: successful operation
          schema:
            $ref: '#/definitions/FolderResponse'
        "500":
          description: Armageddon happened
definitions:
  Card:
    type: object
    required:
      - forbiddenWords
      - guessedWord
      - id
    properties:
      id:
        type: integer
        format: int64
      guessedWord:
        type: string
        example: doggie
      forbiddenWords:
        type: array
        items:
          type: string
      deckId:
        type: integer
        format: int64
  DeckResponse:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      folderId:
        type: integer
        format: int64
      cards:
        type: array
        items:
          $ref: '#/definitions/Card'
  FolderRequest:
    type: object
    required:
      - name
    properties:
      name:
        type: string
  FolderResponse:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
  DeckRequest:
    type: object
    required:
      - id
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      folderId:
        type: integer
        format: int64